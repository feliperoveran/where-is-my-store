#!/usr/bin/env bash

cd $(dirname $(dirname $0))

on_error(){
  red_text 'Something bad happened and the party must stop. Please check the logs'
  exit 1
}

trap 'on_error' ERR

yellow=$(tput setaf 3)

white=$(tput sgr0)

blue=$(tput setaf 4)

blue_text(){
  echo "`tput setaf 4`$@`tput sgr0`"
}

red_text(){
  echo "`tput setaf 1`$@`tput sgr0`"
}

run(){
  docker-compose run --rm $args app $@
}

case $1 in
  start)
    docker-compose up
    ;;
  stop)
    docker-compose stop
    ;;
  clean)
    docker-compose down
    ;;
  sh)
    run sh
    ;;
  console)
    run rails c
    ;;
  rspec)
    run bundle exec rspec ${@:2}
    ;;
  bundle)
    run bundle ${@:2}
    ;;
  bundle-extensions)
    docker-compose run --rm --user root app sh -c "apk update && apk add build-base && bundle ${@:2}"
    ;;
  run)
    run ${@:2}
    ;;
  debug)
    docker-compose stop
    docker-compose run --service-ports --rm app
    ;;
  db:setup)
    echo 'Setting up the database'
    run rails db:setup
    ;;
  db:migrate)
    echo 'Migrating the development database'
    run rails db:migrate
    echo 'Migrating the test database'
    args='-e RAILS_ENV=test'
    run rails db:migrate
    ;;
  db:seed)
    run rails db:seed
    ;;
  rubocop)
    run rubocop ${@:2}
    ;;
  *)
    echo "${blue}This is the helper script you can use to run console, sh, rspec and other useful stuff.${white}"
    echo
    echo 'Usage: ./scripts/where-is-my-store <option> <arguments>'
    echo 'Examples:'
    echo './scripts/where-is-my-store rspec spec/models'
    echo
    echo "Available options:"
    echo "${yellow} start:${white} brings up where-is-my-store app and database"
    echo "${yellow} stop:${white} halts where-is-my-store and all its dependencies"
    echo "${yellow} clean:${white} stops and removes all containers"
    echo "${yellow} sh:${white} brings up a sh session to play with"
    echo "${yellow} console:${white} rails console"
    echo "${yellow} rspec:${white} run rspec suite/selected specs"
    echo "${yellow} bundle:${white} install gems"
    echo "${yellow} bundle-extensions:${white} install gems and builds extensions. ${blue}Use this option when bundler fails to build gem native extensions"
    echo "${yellow} run:${white} runs the given command inside the container. Can be used to run rake tasks, gems or w/e"
    echo "${yellow} debug:${white} hooks into an interactive session. First place byebug/pry on the code, then run this option"
    echo "${yellow} db:setup:${white} sets up the database by creating, migrating and seeding"
    echo "${yellow} db:migrate:${white} migrates the database"
    echo "${yellow} db:seed:${white} seeds the development database"
    echo "${yellow} rubocop:${white} code police will slap you in the face"
  ;;
esac
